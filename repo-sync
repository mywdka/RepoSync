#!/usr/bin/env python3

import yaml
import subprocess
import argparse
import os
import logging
from datetime import datetime

SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s', datefmt='%Y-%m-%d %H:%M:%S')

def execute_commands(yaml_file, action, repo_dir):
    if not os.path.exists(repo_dir):
        logging.error(f"The directory {repo_dir} does not exist.")
        return

    with open(yaml_file, 'r') as file:
        repos = yaml.safe_load(file)
   
    for repo in repos:
        logging.info(f"{action.capitalize()}ing {repo['name']}...")
        os.chdir(repo_dir)
        for command in repo[action]:
            if command.startswith('cd '):
                new_dir = command.split(' ', 1)[1]
                if not os.path.exists(new_dir):
                    logging.error(f"The directory {new_dir} does not exist.")
                    return
                os.chdir(new_dir)
            else:
                try:
                    subprocess.run(command, shell=True, check=True, stdout=subprocess.DEVNULL, stderr=subprocess.STDOUT)
                except subprocess.CalledProcessError as e:
                    logging.error(f"The command '{command}' failed with error code {e.returncode}.")
        os.chdir(SCRIPT_DIR)

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("action", help="Action to perform (install or update)")
    parser.add_argument("repo_dir", help="Directory to perform actions in")
    args = parser.parse_args()

    execute_commands('repositories.yaml', args.action, args.repo_dir)

if __name__ == "__main__":
    main()
